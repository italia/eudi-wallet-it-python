from pyeudiw.openid4vci.storage.openid4vci_entity import OpenId4VCIEntity
from pyeudiw.tools.pyeudiw_frontend_config import PyeudiwFrontendConfigUtils

ALG_TO_CRV = {
    "ES256": "P-256",
    "ES384": "P-384",
    "ES512": "P-521",
}

class SdJwt:

    def __init__(self, config: dict, entity: OpenId4VCIEntity):
        self.config_utils = PyeudiwFrontendConfigUtils(**config)
        self.flow_data = entity

    def issue_sd_jwt(self) -> dict:
        # def issue_sd_jwt(self, specification: dict, additional_headers: dict) -> dict:
        # now = iat_now()
        # exp = exp_from_now(self.config_utils.get_jwt_default_exp())
        # claims = {
        #     "iss": self.flow_data.client_id,
        #     "iat": now,
        #     "exp": exp
        # }
        #
        # specification.update(claims)
        # use_decoys = specification.get("add_decoy_claims", True)
        #
        # ec_alg = self.config_utils.get_jwt_default_sig_alg()
        # ec_crv = ALG_TO_CRV.get(ec_alg)
        # issuer_key = new_ec_key(ec_crv, alg=ec_alg)
        # holder_key = new_ec_key(ec_crv, alg=ec_alg)
        #
        #
        # sdjwt_at_issuer = SDJWTIssuer(
        #     user_claims=specification,
        #     issuer_keys=[issuer_key],
        #     holder_key=holder_key,
        #     add_decoy_claims=use_decoys,
        #     extra_header_parameters=additional_headers
        # )
        #
        # return {"jws": sdjwt_at_issuer.serialized_sd_jwt, "issuance": sdjwt_at_issuer.sd_jwt_issuance}
        return {"issuance:" "eyJhbGciOiJFUzI1NiIsInR5cCI6ImRjK3NkLWp3dCIsImtpZCI6ImMwbHJZM3A2ZW5CU2VUZzBkWEUxZDNoWE5tcGlWR0l4V0RkRFFsTXlaMWhmY0Vsb05XNW1Ra05PVFEiLCJ0cnVzdF9jaGFpbiI6WyJleUpoYkdjaU9pSkZVekkxTmlJc0ltdHBaQ0k2SW1Nd2JISlpNM0EyWlc1Q1UyVlVaekJrV0VVeFpETm9XRTV0Y0dsV1IwbDRWMFJrUkZGc1RYbGFNV2htWTBWc2IwNVhOVzFSYTA1UFZGRWlMQ0owZVhBaU9pSmxiblJwZEhrdGMzUmhkR1Z0Wlc1MEsycDNkQ0o5LmV5SmxlSEFpT2pFM05EZzNNakU1TmpVc0ltbGhkQ0k2TVRjME9EUXlNVGsyTlN3aWFYTnpJam9pYUhSMGNITTZMeTlqY21Wa1pXNTBhV0ZzTFdsemMzVmxjaTVsZUdGdGNHeGxMbTl5WnlJc0luTjFZaUk2SW1oMGRIQnpPaTh2WTNKbFpHVnVkR2xoYkMxcGMzTjFaWEl1WlhoaGJYQnNaUzV2Y21jaUxDSnFkMnR6SWpwN0ltdGxlWE1pT2x0N0ltdDBlU0k2SWtWRElpd2lhMmxrSWpvaVl6QnNjbGt6Y0RabGJrSlRaVlJuTUdSWVJURmtNMmhZVG0xd2FWWkhTWGhYUkdSRVVXeE5lVm94YUdaalJXeHZUbGMxYlZGclRrOVVVU0lzSW1Gc1p5STZJa1ZUTWpVMklpd2lZM0oySWpvaVVDMHlOVFlpTENKNElqb2lSMDA0T0ZnNFNUQlpSWEZ4ZEdKNFVGSnBjbFUwVFVkVE0wSkRZaTFEVlRaQmNGQmtXRTFRYlVJNGR5SXNJbmtpT2lKbGVYcFJkMGR1VWpWTlZXd3Rjek5mWTJaWGFXeENRakE0U0Y5SlMybHZja2hTZUZacmFYbHhNbGRCSW4xZGZTd2liV1YwWVdSaGRHRWlPbnNpYjNCbGJtbGtYMk55WldSbGJuUnBZV3hmYVhOemRXVnlJanA3SW1wM2EzTWlPbnNpYTJWNWN5STZXM3NpYTNSNUlqb2lSVU1pTENKcmFXUWlPaUpTV0dSdFkxZDBURmR1WkRGUFZGVjZUMVZzZWxvd1VsZGxibFpZWVRBNWQxZHFSbEJYYldoSlVXczVNMkV5YUU1YWEwWnVaRlphZFZOUklpd2lZV3huSWpvaVJWTXlOVFlpTENKamNuWWlPaUpRTFRJMU5pSXNJbmdpT2lKSmFVaGhVQzF1U25JNGIxZDZSRUZ5UTBSWFdGQk9YMHR1ZEMxMVdWcE5SRzFJT0cxelYzWm1RV3BSSWl3aWVTSTZJaTF5VjJoS2FHdGxjV2R6WTA5b1lubHpXblozVmtkalMxQnFNbkZyUm5SS2REZ3hWM3AyTVRGTFpYTWlmVjE5ZlN3aVptVmtaWEpoZEdsdmJsOWxiblJwZEhraU9uc2liM0puWVc1cGVtRjBhVzl1WDI1aGJXVWlPaUpQY0dWdVNVUWdRM0psWkdWdWRHbGhiQ0JKYzNOMVpYSWdaWGhoYlhCc1pTSXNJbWh2YldWd1lXZGxYM1Z5YVNJNkltaDBkSEJ6T2k4dlkzSmxaR1Z1ZEdsaGJDMXBjM04xWlhJdVpYaGhiWEJzWlM1dmNtY3ZhRzl0WlNJc0luQnZiR2xqZVY5MWNta2lPaUpvZEhSd2N6b3ZMMk55WldSbGJuUnBZV3d0YVhOemRXVnlMbVY0WVcxd2JHVXViM0puTDNCdmJHbGplU0lzSW14dloyOWZkWEpwSWpvaWFIUjBjSE02THk5amNtVmtaVzUwYVdGc0xXbHpjM1ZsY2k1bGVHRnRjR3hsTG05eVp5OXpkR0YwYVdNdmJHOW5ieTV6ZG1jaUxDSmpiMjUwWVdOMGN5STZXeUowWldOb1FHTnlaV1JsYm5ScFlXd3RhWE56ZFdWeUxtVjRZVzF3YkdVdWIzSm5JbDE5ZlN3aVlYVjBhRzl5YVhSNVgyaHBiblJ6SWpwYkltaDBkSEJ6T2k4dmFXNTBaWEp0WldScFlYUmxMbVZwWkdGekxtVjRZVzF3YkdVdWIzSm5JbDE5LmJ2TEd3Wm5YaEtaejZJZGpjcFItRGQ4RXZCT2NjUm0zbmI3UVBpZ3EtMVhXTmVBM2hYVVFTX2ZpbDFuemJ6RGVmSExzcVE2VG9jRUNrNDh4aTJXMXZnIiwiZXlKaGJHY2lPaUpGVXpJMU5pSXNJbXRwWkNJNkltVlZVa3RUTUU1MllUSjBlR0pzVWpWVmVtUk5Ua2RrUkU1RWJFVlhhM1JGV2tkR1ZGWkdhRWRPZWtwRVRsaEdhMDVxYURKTVYxWndZWGNpTENKMGVYQWlPaUpsYm5ScGRIa3RjM1JoZEdWdFpXNTBLMnAzZENKOS5leUpsZUhBaU9qRTNORGczTWpFNU5qVXNJbWxoZENJNk1UYzBPRFF5TVRrMk5Td2lhWE56SWpvaWFIUjBjSE02THk5cGJuUmxjbTFsWkdsaGRHVXVaV2xrWVhNdVpYaGhiWEJzWlM1dmNtY2lMQ0p6ZFdJaU9pSm9kSFJ3Y3pvdkwyTnlaV1JsYm5ScFlXd3RhWE56ZFdWeUxtVjRZVzF3YkdVdWIzSm5JaXdpYW5kcmN5STZleUpyWlhseklqcGJleUpyZEhraU9pSkZReUlzSW10cFpDSTZJbU13YkhKWk0zQTJaVzVDVTJWVVp6QmtXRVV4WkROb1dFNXRjR2xXUjBsNFYwUmtSRkZzVFhsYU1XaG1ZMFZzYjA1WE5XMVJhMDVQVkZFaUxDSmhiR2NpT2lKRlV6STFOaUlzSW1OeWRpSTZJbEF0TWpVMklpd2llQ0k2SWtkTk9EaFlPRWt3V1VWeGNYUmllRkJTYVhKVk5FMUhVek5DUTJJdFExVTJRWEJRWkZoTlVHMUNPSGNpTENKNUlqb2laWGw2VVhkSGJsSTFUVlZzTFhNelgyTm1WMmxzUWtJd09FaGZTVXRwYjNKSVVuaFdhMmw1Y1RKWFFTSjlYWDE5LloyTXZQOUJjTE44aThOQktDV3ZZalh6TkxGckIwRTVqb1RISzNiYVlsX3hsNE1YN1ktODA2TmN0NzU3dDNjZnV2dUZVR3lxNFd5bzJYRm1NdnViYU13IiwiZXlKaGJHY2lPaUpGVXpJMU5pSXNJbXRwWkNJNklrOUZTazVPTTJScVlsWktXV1ZJYTNsT1ZXOTBZbTVTYTJJeWJGSk9SVmswV2xkck1XUnROWEJZZVRGNFpGZHpNV0Z1Vmt0aFZsWlZZWGNpTENKMGVYQWlPaUpsYm5ScGRIa3RjM1JoZEdWdFpXNTBLMnAzZENKOS5leUpsZUhBaU9qRTNORGczTWpFNU5qVXNJbWxoZENJNk1UYzBPRFF5TVRrMk5Td2lhWE56SWpvaWFIUjBjSE02THk5MGNuVnpkQzFoYm1Ob2IzSXVaWGhoYlhCc1pTNXZjbWNpTENKemRXSWlPaUpvZEhSd2N6b3ZMMmx1ZEdWeWJXVmthV0YwWlM1bGFXUmhjeTVsZUdGdGNHeGxMbTl5WnlJc0ltcDNhM01pT25zaWEyVjVjeUk2VzNzaWEzUjVJam9pUlVNaUxDSnJhV1FpT2lKbFZWSkxVekJPZG1FeWRIaGliRkkxVlhwa1RVNUhaRVJPUkd4RlYydDBSVnBIUmxSV1JtaEhUbnBLUkU1WVJtdE9hbWd5VEZkV2NHRjNJaXdpWVd4bklqb2lSVk15TlRZaUxDSmpjbllpT2lKUUxUSTFOaUlzSW5naU9pSjZVSFJUYlZKRU1qQnVlR2RpV2sxRldHWldTRUZUT1U5UmQzRTFSMmcyZEhSVWIyeGxjWE14WmtOdklpd2llU0k2SWpaeVkwaHFaVEJJYkhCck1ua3lVblEwU1ZCV04wSkhhRE52UkRaNlpqZ3dYMnRCYWtSWlJqVk1WMnNpZlYxOWZRLmFqY1BOa2x5YTg4b0wwNG5xT1V0NzhEaVBmMzNDTVZaX09LU1o3VWpHbWtuNUlPUXBDQUJwWWdEYzg4c0hENldsNHhlTkI5eWh6VTZxT1d3YXJLdjFnIiwiZXlKaGJHY2lPaUpGVXpJMU5pSXNJbXRwWkNJNklrOUZTazVPTTJScVlsWktXV1ZJYTNsT1ZXOTBZbTVTYTJJeWJGSk9SVmswV2xkck1XUnROWEJZZVRGNFpGZHpNV0Z1Vmt0aFZsWlZZWGNpTENKMGVYQWlPaUpsYm5ScGRIa3RjM1JoZEdWdFpXNTBLMnAzZENKOS5leUpsZUhBaU9qRTNORGczTWpFNU5qVXNJbWxoZENJNk1UYzBPRFF5TVRrMk5Td2lhWE56SWpvaWFIUjBjSE02THk5MGNuVnpkQzFoYm1Ob2IzSXVaWGhoYlhCc1pTNXZjbWNpTENKemRXSWlPaUpvZEhSd2N6b3ZMM1J5ZFhOMExXRnVZMmh2Y2k1bGVHRnRjR3hsTG05eVp5SXNJbXAzYTNNaU9uc2lhMlY1Y3lJNlczc2lhM1I1SWpvaVJVTWlMQ0pyYVdRaU9pSlBSVXBPVGpOa2FtSldTbGxsU0d0NVRsVnZkR0p1VW10aU1teFNUa1ZaTkZwWGF6RmtiVFZ3V0hreGVHUlhjekZoYmxaTFlWWldWV0YzSWl3aVlXeG5Jam9pUlZNeU5UWWlMQ0pqY25ZaU9pSlFMVEkxTmlJc0luZ2lPaUpGTVU0eUxWbGZZbEF0YmtSRFVWSkZRa1kzWlRsdFpUVkVVblF6Vmtabk0waEZUVmRPVG1kM1RtOTNJaXdpZVNJNklrZG1Oa1pPYm5oRVNVeElkRzVJTURCNGVHRkNZV05SWmtsMlZrWmZhMjlQZDJjM2FGQlJiVFpuUjBVaWZWMTlMQ0p0WlhSaFpHRjBZU0k2ZXlKbVpXUmxjbUYwYVc5dVgyVnVkR2wwZVNJNmV5Sm1aV1JsY21GMGFXOXVYMlpsZEdOb1gyVnVaSEJ2YVc1MElqb2lhSFIwY0hNNkx5OTBjblZ6ZEMxaGJtTm9iM0l1WlhoaGJYQnNaUzV2Y21jdlptVjBZMmdpTENKbVpXUmxjbUYwYVc5dVgzSmxjMjlzZG1WZlpXNWtjRzlwYm5RaU9pSm9kSFJ3Y3pvdkwzUnlkWE4wTFdGdVkyaHZjaTVsZUdGdGNHeGxMbTl5Wnk5eVpYTnZiSFpsSWl3aVptVmtaWEpoZEdsdmJsOXNhWE4wWDJWdVpIQnZhVzUwSWpvaWFIUjBjSE02THk5MGNuVnpkQzFoYm1Ob2IzSXVaWGhoYlhCc1pTNXZjbWN2YkdsemRDSXNJbTl5WjJGdWFYcGhkR2x2Ymw5dVlXMWxJam9pVkVFZ1pYaGhiWEJzWlNJc0ltaHZiV1Z3WVdkbFgzVnlhU0k2SW1oMGRIQnpPaTh2ZEhKMWMzUXRZVzVqYUc5eUxtVjRZVzF3YkdVdWIzSm5MMmh2YldVaUxDSndiMnhwWTNsZmRYSnBJam9pYUhSMGNITTZMeTkwY25WemRDMWhibU5vYjNJdVpYaGhiWEJzWlM1dmNtY3ZjRzlzYVdONUlpd2liRzluYjE5MWNta2lPaUpvZEhSd2N6b3ZMM1J5ZFhOMExXRnVZMmh2Y2k1bGVHRnRjR3hsTG05eVp5OXpkR0YwYVdNdmJHOW5ieTV6ZG1jaUxDSmpiMjUwWVdOMGN5STZXeUowWldOb1FIUnlkWE4wTFdGdVkyaHZjaTVsZUdGdGNHeGxMbTl5WnlKZGZYMHNJbU52Ym5OMGNtRnBiblJ6SWpwN0ltMWhlRjl3WVhSb1gyeGxibWQwYUNJNk1YMTkuTGdZbXhzdEhRdktybl8yZ1FocnlSM0FLbEVEaGFZU05zUnpYNFk4ZWtmSElmX0w1WnJKSWRaanNqbU1KNk9DU2d2c1A4QVA3MDNHV3NLMTdUZXJLeUEiXX0.eyJfc2QiOiBbIkRTdk5LZHZOVHlaNGc4ZEZSY0drblVOQWxsZ0RwVHEzRDZvMDZQU01mX1EiLCAiR1gzel83WHBJckEzVF9zSWJsSi1tYWEydm9HcF84bkZOSk0xT1Fiam1OVSIsICJNZ1ZNM3NybkJxRE5VUlhJREl4MkV0QUpTUDdFbjVUQ0Z3Z1MydDU3MEwwIiwgImpmalpkRGktRk9KeTZpUFZzMlMzb0hCYUl0UUhwTEtpYlhEcktEZnFjcjAiXSwgInVzZXJfY2xhaW1zIjogeyJfc2QiOiBbIjB0M2EtbTFOYXhQS1J3dm5yTFJrek54U095dFNiTUVybFVfdlQtQkhmNjgiLCAiNF9vY3lBUG9UN0ZYVjJzZjdnUE1hNzVfX2Y3alJ3RTZMbHZ0WUpybnhfTSIsICI1VzY1VmFhVzE2UkRFS2hObzU3SFlVcmR3VERpY2FMZ3FuLVk0emZZa0FjIiwgIkw3LU9Tb3pEY1RvWTBXamlDU0x4b1FlZ29kdm9vdW03bHA1bG5PLUxfd28iLCAiTXNPXy1NVmhtT04tN21FU29PVjRjX09URTBKZ3U2UGlfN19tU2lIWFF5VSIsICJSRFdPNURsUHFOZlFpV2YxM1pxZUVyak9LeVJkbFdnN0haSjVUeWpzNDkwIiwgIlJneVJwTEoyTFRzOFhnLVF2MHRhalJGbWJEZDFDZ25FQ1hqaUNEUTZFVFEiLCAiVzAzTWhQOEZESE05akFaQU1iMjB3aG5qN1h0Z2k5c0hjdmVXUndVTHdQNCIsICJnci0zVkJFQ0lDRDFJVXpIbGVvRllwbWNuQXRmTHlSNHBkV1JNOWp5QWdjIl19LCAiaG9sZGVyX2Rpc2Nsb3NlZF9jbGFpbXMiOiB7Il9zZCI6IFsiM1FaSy0wOEl5SmQ0Yzg1TU9EcGlqRG5wN0lFbEctNjFxckFKVE52bVBNdyIsICJLQjR1ZHRnM2luNWlzLS00LUtmNTBzS21DVEx5WnRtd0VfNmlGOVdPMDRVIiwgIms1TFE2T1pla09tbENUS3lVOEh4UEprTF9iUjl1dkxqcGRVTjlFVzd3b2ciLCAia28yeE5IVzhVQjFzOHBlUVNZMUZKWk1fZG56TzBrQjM5SzBJM0NRQ2hxZyIsICJ1ckE2b1FUaEhYb2RTYTBiY0Q0TEZBaVkxN2xVZlM3eXU3d2xMaVFOOGN3Il0sICJnaXZlbl9uYW1lIjogIk1hcmlvIiwgImZhbWlseV9uYW1lIjogIlJvc3NpIiwgInBsYWNlX29mX2JpcnRoIjogeyJfc2QiOiBbIjFYYnZCQXpKc1hYZVBiRXpqTnU4QUM1MnRrYklrTWVKUEdoVV9CaUE5XzAiLCAiMnFpLXE3ZDFLVkZqdHVOQ0IzaXZNeE9wUmRmZFZmXzZpWkk4ZXowaEFldyIsICJRdm0tdTB5ZGF4ZUpSckwwYXZTOEFVUi1yZmpzSnR5OVk3MGRXTHZNTUFJIiwgIlpyaDNfNmZ2VUFLZDJvRjBsTC1mN21ZSzdUNjVoWlRLN0Fwbk1rVlE0T2siLCAiYTVXRUVtam1CSEtibDhseVlWNjhRUjhvVm1WZUZKNXFzRVFPS2RvSVlBYyJdLCAiY291bnRyeSI6ICJJVCIsICJsb2NhbGl0eSI6ICJSb21lIn19LCAia2V5X2JpbmRpbmciOiB0cnVlLCAiaXNzIjogImh0dHBzOi8vaXNzdWVyLmV4YW1wbGUuY29tIiwgImlhdCI6IDE3NDg0MjE5NzYsICJleHAiOiAxNzQ4NDIyMzM2LCAiX3NkX2FsZyI6ICJzaGEtMjU2IiwgImNuZiI6IHsiandrIjogeyJrdHkiOiAiRUMiLCAia2lkIjogIlpVbE1lVXRZZG5WRWVVZHVabDloZVZOcFlsVkJWVUk0V2psWmFFcG5VM0JpVEZkd01EWXhkVWxzT0EiLCAiYWxnIjogIkVTMjU2IiwgImNydiI6ICJQLTI1NiIsICJ4IjogIjlRYTV0UjRnay1YQkc5OVViMEJsbFJyUEZYVlkyUk4yczFnbDJodTVTOWMiLCAieSI6ICJyRDFVVzRBT09BOWRXNVo4QnpaNFQ1UFBVdEFSU3phNXNiQWV3X1lJUXE4In19fQ.LJNW6Sss7pYKV2XQ_EZ7voRVs7n5RpV2_ymrDaVkdztVnjiAI2iaoNTMhkUBERmEqubH2TuaNEBdh3k94jK-BA~WyJKV0lkSTVld0lzZkdOQnhQYkdIZjJBIiwgInVuaXF1ZV9pZCIsICJ4eHh4eHh4eC14eHh4LXh4eHgteHh4eC14eHh4eHh4eHh4eHgiXQ~WyJrQ0xfdmIyckxOT3NhV2k2WUVyTmZRIiwgImdpdmVuX25hbWUiLCAiTWFyaW8iXQ~WyJ6SFkxUzJzenI1NUZ0Snp2cldWZGpnIiwgImZhbWlseV9uYW1lIiwgIlJvc3NpIl0~WyJ4MWVkNkl0MTY2MEk0R05iRVE3YU5RIiwgImJpcnRoZGF0ZSIsICIxOTgwLTAxLTEwIl0~WyJQaF9GWVU4VmF1ZG5laXhjM1V6QVlBIiwgInBsYWNlX29mX2JpcnRoIiwgeyJfc2QiOiBbIkI3cDhxMTN0cU9pZHZ3Q2gyX1RoZWdqUHF6UUhwdXpQM19EbXp3SWNJSHciLCAiRjkybjhQLS1aeGUyS1pXODJ5Qk9lcmFWZWYzTWc3bEJDZ3lGSnBtSlJRayIsICJ4elFuMDQxVHdJd0FSN3p5SDU1QWxkWkhFNGtVdmU4OVRyeTJLMlpubmJrIl0sICJjb3VudHJ5IjogIklUIiwgImxvY2FsaXR5IjogIlJvbWUifV0~WyJ2UnNfQjRNNWhlanFYMlRuV0tseWdRIiwgInRheF9pZF9jb2RlIiwgIlRJTklULVhYWFhYWFhYWFhYWFhYWFgiXQ~"}
