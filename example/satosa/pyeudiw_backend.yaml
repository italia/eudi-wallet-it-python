module: pyeudiw.satosa.backend.OpenID4VPBackend
name: OpenID4VP

config:

  ui:
    static_storage_url: !ENV SATOSA_BASE_STATIC
    template_folder: "templates" # project root
    qrcode_template: "qr_code.html"
    error_template: "error.html"
    error_url: "https://localhost/error_page.html"
  
  endpoints:
    pre_request: '/pre-request'
    request:
      module: pyeudiw.satosa.default.request_handler
      class: RequestHandler
      path: '/request-uri'
    response:
      module: pyeudiw.satosa.default.response_handler
      class: ResponseHandler
      path: '/response-uri'
    status: '/status'
    get_response: '/get-response'

  qrcode:
    size: 250 # px
    color: '#000000'  # hex
    expiration_time: 120 # seconds
    logo_path: 'wallet-it/wallet-icon-blue.svg' # relative to static_storage_url

  response_code:
    sym_key: "1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef" # hex string of 64 characters

  jwt:
    default_sig_alg: ES256 # or RS256. Please note that this signature alg MUST be compliant with the private keys used for the signature. X.509 certificates MUST be therefore ECDSA using ES, and RSA using RS
    default_enc_alg: RSA-OAEP
    default_enc_enc: A256CBC-HS512
    default_exp: 6         # minutes
    enc_alg_supported: &enc_alg_supported
        - RSA-OAEP
        - RSA-OAEP-256
        - ECDH-ES
        - ECDH-ES+A128KW
        - ECDH-ES+A192KW
        - ECDH-ES+A256KW
    enc_enc_supported: &enc_enc_supported
        - A128CBC-HS256
        - A192CBC-HS384
        - A256CBC-HS512
        - A128GCM
        - A192GCM
        - A256GCM
    sig_alg_supported: &sig_alg_supported
        - RS256
        - RS384
        - RS512
        - ES256
        - ES384
        - ES512
    

  authorization:
    client_id: # this field if not set will be autopopulated using internal variables base_url and name using the following format: "<base_url>/<name>" 
    auth_iss_id: # this field if not set will be set to client_id in the authz request 
    url_scheme: haip
    scopes:
    - pid-sd-jwt:unique_id+given_name+family_name
    default_acr_value: https://www.spid.gov.it/SpidL2
    expiration_time: 5 # minutes
    aud: https://self-issued.me/v2
    response_mode: direct_post
    presentation_definition:
      id: global-presentation-definition-id
      input_descriptors:
      - id: input-specific-id
        purpose: Request presentation holding Power of Representation attestation
        format:
          dc+sd-jwt: {}
        constraints:
          fields:
          - path:
            - "$.vct"
            filter:
              const: urn:eu.europa.ec.eudi:por:1
      - id: another-input-specific-id
        purpose: Request first name and last name claims from PID attestation
        format:
          dc+sd-jwt: {}
        constraints:
          limit_disclosure: required
          fields:
            - path:
              - "$.vct"
              filter:
                type: string
                pattern: urn:eu.europa.ec.eudi:por:1
            - path:
              - "$.family_name"
            - path:
              - "$.given_name"

  duckle:
    dcql_query: '{"credentials":[{"id":"personal id data","format":"dc+sd-jwt","meta":{"vct_values":["https://trust-registry.eid-wallet.example.it/credentials/v1.0/personidentificationdata"]},"claims":[{"path":["given_name"]},{"path":["family_name"]}]},{"id":"wallet attestation","format":"dc+sd-jwt","meta":{"vct_values":["https://itwallet.registry.example.it/WalletAttestation"]},"claims":[{"path":["wallet_link"]},{"path":["wallet_name"]}]}]}'

  user_attributes:
    unique_identifiers:
    - tax_id_code
    - unique_id
    subject_id_random_value: CHANGEME!
  
  network:
    httpc_params: &httpc_params
      connection:
        ssl: true
      session:
        timeout: 6

  # private jwk
  metadata_jwks: &metadata_jwks
    - kty: EC # Please note: this is the first key [0] and it is used for signing the presentation requests
      d: i0HQiqDPXf-MqC776ztbgOCI9-eARhcUczqJ-7_httc
      use: sig
      crv: P-256
      kid: SQgNjv4yU8sfuafJ2DPWq2tnOlK1JSibd3V5KqYRhOk
      x: Q46FDkhMjewZIP9qP8ZKZIP-ZEemctvjxeP0l3vWHMI
      y: IT7lsGxdJewmonk9l1_TAVYx_nixydTtI1Sbn0LkfEA
      alg: ES256
    - kty: RSA
      d: QUZsh1NqvpueootsdSjFQz-BUvxwd3Qnzm5qNb-WeOsvt3rWMEv0Q8CZrla2tndHTJhwioo1U4NuQey7znijhZ177bUwPPxSW1r68dEnL2U74nKwwoYeeMdEXnUfZSPxzs7nY6b7vtyCoA-AjiVYFOlgKNAItspv1HxeyGCLhLYhKvS_YoTdAeLuegETU5D6K1xGQIuw0nS13Icjz79Y8jC10TX4FdZwdX-NmuIEDP5-s95V9DMENtVqJAVE3L-wO-NdDilyjyOmAbntgsCzYVGH9U3W_djh4t3qVFCv3r0S-DA2FD3THvlrFi655L0QHR3gu_Fbj3b9Ybtajpue_Q
      e: AQAB
      use: enc
      kid: 9Cquk0X-fNPSdePQIgQcQZtD6J0IjIRrFigW2PPK_-w
      n: utqtxbs-jnK0cPsV7aRkkZKA9t4S-WSZa3nCZtYIKDpgLnR_qcpeF0diJZvKOqXmj2cXaKFUE-8uHKAHo7BL7T-Rj2x3vGESh7SG1pE0thDGlXj4yNsg0qNvCXtk703L2H3i1UXwx6nq1uFxD2EcOE4a6qDYBI16Zl71TUZktJwmOejoHl16CPWqDLGo9GUSk_MmHOV20m4wXWkB4qbvpWVY8H6b2a0rB1B1YPOs5ZLYarSYZgjDEg6DMtZ4NgiwZ-4N1aaLwyO-GLwt9Vf-NBKwoxeRyD3zWE2FXRFBbhKGksMrCGnFDsNl5JTlPjaM3kYyImE941ggcuc495m-Fw
      p: 2zmGXIMCEHPphw778YjVTar1eycih6fFSJ4I4bl1iq167GqO0PjlOx6CZ1-OdBTVU7HfrYRiUK_BnGRdPDn-DQghwwkB79ZdHWL14wXnpB5y-boHz_LxvjsEqXtuQYcIkidOGaMG68XNT1nM4F9a8UKFr5hHYT5_UIQSwsxlRQ0
      q: 2jMFt2iFrdaYabdXuB4QMboVjPvbLA-IVb6_0hSG_-EueGBvgcBxdFGIZaG6kqHqlB7qMsSzdptU0vn6IgmCZnX-Hlt6c5X7JB_q91PZMLTO01pbZ2Bk58GloalCHnw_mjPh0YPviH5jGoWM5RHyl_HDDMI-UeLkzP7ImxGizrM

  #This is the configuration for the relaying party metadata
  metadata: &metadata
    application_type: web

    #The following section contains all the algorithms supported for the encryption of response
    authorization_encrypted_response_alg: *enc_alg_supported
    authorization_encrypted_response_enc: *enc_enc_supported
    authorization_signed_response_alg: *sig_alg_supported

    #Various informations of the client
    client_id: # this field is autopopulated using internal variables base_url and name using the following format: "<base_url>/<name>" 
    client_name: Name of an example organization
    contacts:
      - ops@verifier.example.org
    default_acr_values:
      - https://www.spid.gov.it/SpidL2
      - https://www.spid.gov.it/SpidL3

    #The following section contains all the algorithms supported for the encryption of id token response
    id_token_encrypted_response_alg: *enc_alg_supported
    id_token_encrypted_response_enc: *enc_enc_supported
    id_token_signed_response_alg: *sig_alg_supported

    # public part loaded in the __init__
    jwks: *metadata_jwks

    redirect_uris: 
      # This field is autopopulated using internal variables base_url and name using the following format: <base_url>/<name>/redirect-uri"
    request_uris: 
      # This field is autopopulated using internal variables base_url and name using the following format: <base_url>/<name>/request-uri"

    # not necessary according to openid4vp
    # default_max_age: 1111
    # require_auth_time: true
    # subject_type: pairwise

    vp_formats:
      dc+sd-jwt:
        sd-jwt_alg_values:
          - ES256
          - ES384
        kb-jwt_alg_values:
          - ES256
          - ES384

  credential_presentation_handlers:
    max_submission_size: 4096
    formats:
      - module: pyeudiw.openid4vp.vp_sd_jwt_vc
        class:  VpVcSdJwtParserVerifier
        format: dc+sd-jwt
      - module: pyeudiw.openid4vp.vp_mdoc_cbor
        class:  VpMDocCbor
        format: mso_mdoc
      - module: pyeudiw.duckle_ql.handler
        class: DuckleHandler
        format: jwt_vc_json

  trust:
    direct_trust_sd_jwt_vc:
      module: pyeudiw.trust.handler.direct_trust_sd_jwt_vc
      class: DirectTrustSdJwtVc
      config:
        cache_ttl: 0
        httpc_params: *httpc_params
        jwk_endpoint: /.well-known/jwt-vc-issuer
    direct_trust_jar:
      module: pyeudiw.trust.handler.direct_trust_jar
      class: DirectTrustJar
      config:
        cache_ttl: 0
        httpc_params: *httpc_params
        jwk_endpoint: /.well-known/jar-issuer
        jwks: *metadata_jwks
    federation:
      module: pyeudiw.trust.handler.federation
      class: FederationHandler
      config:
        httpc_params: *httpc_params
        cache_ttl: 0
        entity_configuration_exp: 600
        # include_issued_jwt_header_param: true # default false; if true, it will include trust_chain header parameters in the signed presentation request issued by this trust handler
        metadata_type: "openid_credential_verifier"
        metadata: *metadata
        authority_hints:
            - http://127.0.0.1:8000
        trust_anchors:
            - http://127.0.0.1:8000:
              -
            - https://trust-anchor.edu:
              -
            - https://trust-anchor.example.org:
              - kty: RSA
                d: QUZsh1NqvpueootsdSjFQz-BUvxwd3Qnzm5qNb-WeOsvt3rWMEv0Q8CZrla2tndHTJhwioo1U4NuQey7znijhZ177bUwPPxSW1r68dEnL2U74nKwwoYeeMdEXnUfZSPxzs7nY6b7vtyCoA-AjiVYFOlgKNAItspv1HxeyGCLhLYhKvS_YoTdAeLuegETU5D6K1xGQIuw0nS13Icjz79Y8jC10TX4FdZwdX-NmuIEDP5-s95V9DMENtVqJAVE3L-wO-NdDilyjyOmAbntgsCzYVGH9U3W_djh4t3qVFCv3r0S-DA2FD3THvlrFi655L0QHR3gu_Fbj3b9Ybtajpue_Q
                e: AQAB
                kid: 9Cquk0X-fNPSdePQIgQcQZtD6J0IjIRrFigW2PPK_-w
                n: utqtxbs-jnK0cPsV7aRkkZKA9t4S-WSZa3nCZtYIKDpgLnR_qcpeF0diJZvKOqXmj2cXaKFUE-8uHKAHo7BL7T-Rj2x3vGESh7SG1pE0thDGlXj4yNsg0qNvCXtk703L2H3i1UXwx6nq1uFxD2EcOE4a6qDYBI16Zl71TUZktJwmOejoHl16CPWqDLGo9GUSk_MmHOV20m4wXWkB4qbvpWVY8H6b2a0rB1B1YPOs5ZLYarSYZgjDEg6DMtZ4NgiwZ-4N1aaLwyO-GLwt9Vf-NBKwoxeRyD3zWE2FXRFBbhKGksMrCGnFDsNl5JTlPjaM3kYyImE941ggcuc495m-Fw
                p: 2zmGXIMCEHPphw778YjVTar1eycih6fFSJ4I4bl1iq167GqO0PjlOx6CZ1-OdBTVU7HfrYRiUK_BnGRdPDn-DQghwwkB79ZdHWL14wXnpB5y-boHz_LxvjsEqXtuQYcIkidOGaMG68XNT1nM4F9a8UKFr5hHYT5_UIQSwsxlRQ0
                q: 2jMFt2iFrdaYabdXuB4QMboVjPvbLA-IVb6_0hSG_-EueGBvgcBxdFGIZaG6kqHqlB7qMsSzdptU0vn6IgmCZnX-Hlt6c5X7JB_q91PZMLTO01pbZ2Bk58GloalCHnw_mjPh0YPviH5jGoWM5RHyl_HDDMI-UeLkzP7ImxGizrM
        default_sig_alg: "RS256"
        trust_marks: [] 
        federation_entity_metadata:
            organization_name: IAM Proxy Italia OpenID4VP backend
            homepage_uri: https://developers.italia.it
            policy_uri: https://developers.italia.it
            tos_uri: https://developers.italia.it
            logo_uri: https://developers.italia.it/assets/icons/logo-it.svg
        federation_jwks: # !ENV PYEUDIW_FEDERATION_JWKS
          - kty: RSA
            d: QUZsh1NqvpueootsdSjFQz-BUvxwd3Qnzm5qNb-WeOsvt3rWMEv0Q8CZrla2tndHTJhwioo1U4NuQey7znijhZ177bUwPPxSW1r68dEnL2U74nKwwoYeeMdEXnUfZSPxzs7nY6b7vtyCoA-AjiVYFOlgKNAItspv1HxeyGCLhLYhKvS_YoTdAeLuegETU5D6K1xGQIuw0nS13Icjz79Y8jC10TX4FdZwdX-NmuIEDP5-s95V9DMENtVqJAVE3L-wO-NdDilyjyOmAbntgsCzYVGH9U3W_djh4t3qVFCv3r0S-DA2FD3THvlrFi655L0QHR3gu_Fbj3b9Ybtajpue_Q
            e: AQAB
            kid: 9Cquk0X-fNPSdePQIgQcQZtD6J0IjIRrFigW2PPK_-w
            n: utqtxbs-jnK0cPsV7aRkkZKA9t4S-WSZa3nCZtYIKDpgLnR_qcpeF0diJZvKOqXmj2cXaKFUE-8uHKAHo7BL7T-Rj2x3vGESh7SG1pE0thDGlXj4yNsg0qNvCXtk703L2H3i1UXwx6nq1uFxD2EcOE4a6qDYBI16Zl71TUZktJwmOejoHl16CPWqDLGo9GUSk_MmHOV20m4wXWkB4qbvpWVY8H6b2a0rB1B1YPOs5ZLYarSYZgjDEg6DMtZ4NgiwZ-4N1aaLwyO-GLwt9Vf-NBKwoxeRyD3zWE2FXRFBbhKGksMrCGnFDsNl5JTlPjaM3kYyImE941ggcuc495m-Fw
            p: 2zmGXIMCEHPphw778YjVTar1eycih6fFSJ4I4bl1iq167GqO0PjlOx6CZ1-OdBTVU7HfrYRiUK_BnGRdPDn-DQghwwkB79ZdHWL14wXnpB5y-boHz_LxvjsEqXtuQYcIkidOGaMG68XNT1nM4F9a8UKFr5hHYT5_UIQSwsxlRQ0
            q: 2jMFt2iFrdaYabdXuB4QMboVjPvbLA-IVb6_0hSG_-EueGBvgcBxdFGIZaG6kqHqlB7qMsSzdptU0vn6IgmCZnX-Hlt6c5X7JB_q91PZMLTO01pbZ2Bk58GloalCHnw_mjPh0YPviH5jGoWM5RHyl_HDDMI-UeLkzP7ImxGizrM
    x509:
      module: pyeudiw.trust.handler.x509
      class: X509Handler
      config:
        # client_id: *client_id
        client_id_scheme: x509_san_dns # this will be prepended in the client id scheme used in the request. 
        include_issued_jwt_header_param: true # default false; if true, it will include x5c header parameters in the signed presentation request issued by this trust handler
        certificate_authorities:
          ca.example.com: |
            -----BEGIN CERTIFICATE-----
            MIIB2DCCAX2gAwIBAgIULx2ECoVuwx8Hjz9KT8LU2UnO5fcwCgYIKoZIzj0EAwIw
            UjEuMCwGA1UEAwwlQ049Y2EuZXhhbXBsZS5jb20sIE89RXhhbXBsZSBDQSwgQz1J
            VDETMBEGA1UECgwKRXhhbXBsZSBDQTELMAkGA1UEBhMCSVQwHhcNMjUwNDA5MTIw
            ODUwWhcNMjYwNDEwMTIwODUwWjBSMS4wLAYDVQQDDCVDTj1jYS5leGFtcGxlLmNv
            bSwgTz1FeGFtcGxlIENBLCBDPUlUMRMwEQYDVQQKDApFeGFtcGxlIENBMQswCQYD
            VQQGEwJJVDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABFnk7w/2CELwYAo1HYjh
            v07QS3Xo3HL1Qt/SD2s5pcBmENuFzPUS8E1JFZ047hfaGIb+6NQdUcNt7RGBQgvJ
            cNqjMTAvMBIGA1UdEwEB/wQIMAYBAf8CAQEwGQYDVR0RBBIwEIIOY2EuZXhhbXBs
            ZS5jb20wCgYIKoZIzj0EAwIDSQAwRgIhAJLASYXdk77YGrVeuj2bdy48fFeGcHwY
            hEt3dD1GqdqkAiEAqekBRTF9wzJ/lPmRJyPdLoxzGBbIkd53NCtGUfNvaL0=
            -----END CERTIFICATE-----
        relying_party_certificate_chains_by_ca: # X.509 chains in PEM format. Please note: Leaf's certificate MUST be related to metadata_jwks[0]
            ca.example.com:
              - |
                -----BEGIN CERTIFICATE-----
                MIIB8zCCAZmgAwIBAgIUDHO8luqRDrcn+Vm+dWjca+iCX2MwCgYIKoZIzj0EAwIw
                TjEpMCcGA1UEAwwgaHR0cHM6Ly9pbnRlcm1lZGlhdGUuZXhhbXBsZS5uZXQxFDAS
                BgNVBAoMC0V4YW1wbGUgSU5UMQswCQYDVQQGEwJJVDAeFw0yNTA0MDkxMjA4NTBa
                Fw0yNjA0MTAxMjA4NTBaMFcxMTAvBgNVBAMMKENOPWVhZi5leGFtcGxlLmNvbSwg
                Tz1FeGFtcGxlIExlYWYsIEM9SVQxFTATBgNVBAoMDEV4YW1wbGUgTGVhZjELMAkG
                A1UEBhMCSVQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARDjoUOSEyN7Bkg/2o/
                xkpkg/5kR6Zy2+PF4/SXe9YcwiE+5bBsXSXsJqJ5PZdf0wFWMf54scnU7SNUm59C
                5HxAo0wwSjAMBgNVHRMBAf8EAjAAMDoGA1UdEQQzMDGCEGxlYWYuZXhhbXBsZS5v
                cmeGHWh0dHBzOi8vZXhhbXBsZS5jb20vT3BlbklENFZQMAoGCCqGSM49BAMCA0gA
                MEUCIFa4Cbi9ZwpbcCYfZ7HivE55+lTTew0rm4nucoVUZUnWAiEA4zdbGSg9hDbp
                YpYZqBWSu13gPR95PHwAuuHHaV996jc=
                -----END CERTIFICATE-----
              - |
                -----BEGIN CERTIFICATE-----
                MIIBuDCCAV6gAwIBAgIUXMe7NM/UP3adIoD7VZpSdCx8EOEwCgYIKoZIzj0EAwIw
                UjEuMCwGA1UEAwwlQ049Y2EuZXhhbXBsZS5jb20sIE89RXhhbXBsZSBDQSwgQz1J
                VDETMBEGA1UECgwKRXhhbXBsZSBDQTELMAkGA1UEBhMCSVQwHhcNMjUwNDA5MTIw
                ODUwWhcNMjYwNDEwMTIwODUwWjBOMSkwJwYDVQQDDCBodHRwczovL2ludGVybWVk
                aWF0ZS5leGFtcGxlLm5ldDEUMBIGA1UECgwLRXhhbXBsZSBJTlQxCzAJBgNVBAYT
                AklUMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEiB2ez55arVjtvNYEX25Ctb0b
                SOB3QABzBUTpWFo4utrMsnU9x+mxPDp87IU5KY0fOEjtZY3d6m8WS3Bla6wyQaMW
                MBQwEgYDVR0TAQH/BAgwBgEB/wIBADAKBggqhkjOPQQDAgNIADBFAiEAxRqSBdrO
                EKgGqspslHJ411Owkx6AxGUnJbtRhojk1OkCIC+pV6wm/fWtFDk1Sxq1WQp6ZHaZ
                a7vw4qcqrfQK9EEE
                -----END CERTIFICATE-----
              - |
                -----BEGIN CERTIFICATE-----
                MIIB2DCCAX2gAwIBAgIULx2ECoVuwx8Hjz9KT8LU2UnO5fcwCgYIKoZIzj0EAwIw
                UjEuMCwGA1UEAwwlQ049Y2EuZXhhbXBsZS5jb20sIE89RXhhbXBsZSBDQSwgQz1J
                VDETMBEGA1UECgwKRXhhbXBsZSBDQTELMAkGA1UEBhMCSVQwHhcNMjUwNDA5MTIw
                ODUwWhcNMjYwNDEwMTIwODUwWjBSMS4wLAYDVQQDDCVDTj1jYS5leGFtcGxlLmNv
                bSwgTz1FeGFtcGxlIENBLCBDPUlUMRMwEQYDVQQKDApFeGFtcGxlIENBMQswCQYD
                VQQGEwJJVDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABFnk7w/2CELwYAo1HYjh
                v07QS3Xo3HL1Qt/SD2s5pcBmENuFzPUS8E1JFZ047hfaGIb+6NQdUcNt7RGBQgvJ
                cNqjMTAvMBIGA1UdEwEB/wQIMAYBAf8CAQEwGQYDVR0RBBIwEIIOY2EuZXhhbXBs
                ZS5jb20wCgYIKoZIzj0EAwIDSQAwRgIhAJLASYXdk77YGrVeuj2bdy48fFeGcHwY
                hEt3dD1GqdqkAiEAqekBRTF9wzJ/lPmRJyPdLoxzGBbIkd53NCtGUfNvaL0=
                -----END CERTIFICATE-----

        private_keys: *metadata_jwks

  # Mongodb database configuration
  storage:
    mongo_db:
      cache:
        module: pyeudiw.storage.mongo_cache
        class: MongoCache
        init_params:
          url: mongodb://localhost:27017
          conf:
            db_name: eudiw
          # connection_params:
      storage:
        module: pyeudiw.storage.mongo_storage
        class: MongoStorage
        init_params:
          url: mongodb://localhost:27017
          conf:
            db_name: eudiw
            db_sessions_collection: sessions
            db_trust_attestations_collection: trust_attestations
            db_trust_anchors_collection: trust_anchors
            db_trust_sources_collection: trust_sources
            data_ttl: 63072000 # 2 years
          # - connection_params:
